import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const locales = ["en", "bn"]; // valid locales

export default async function RootLayout({ children, params }) {
  const { locale }  = await params;

  // Validate locale
  if (!hasLocale(locales, locale)) {
    notFound(); // 404
  }

  // Load messages dynamically
  const messages = (await import(`../../../messages/${locale}.json`)).default;

  return (
    <html lang={locale} translate="no">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
